# ============================================================================
# AUDIOMIND - CONFIGURACIÓN DE AMBIENTE
# ============================================================================
# Este archivo es un template. Para usar:
# 1. Copiar a .env: cp .env.example .env
# 2. Actualizar valores según tu ambiente
# 3. NUNCA commitear .env (está en .gitignore)
#
# Precedencia de configuración:
# Variables de ambiente del sistema > .env > config/*.yaml > defaults en código
# ============================================================================

# ============================================================================
# GENERAL
# ============================================================================
APP_NAME=AudioMind
APP_VERSION=0.1.0
ENVIRONMENT=development  # development | test | production
DEBUG=True
LOG_LEVEL=INFO  # DEBUG | INFO | WARNING | ERROR | CRITICAL

# ----------------------------------------------------------------------------
# API CONFIGURATION
# ----------------------------------------------------------------------------
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=True  # Auto-reload on code changes (dev only)
API_PREFIX=/api/v1

# CORS (Cross-Origin Resource Sharing)
CORS_ORIGINS=http://localhost:3000,http://localhost:8501  # Streamlit default
CORS_ALLOW_CREDENTIALS=True
CORS_ALLOW_METHODS=*
CORS_ALLOW_HEADERS=*

# ----------------------------------------------------------------------------
# OPENAI API (Required for GPT-4 and Whisper)
# ----------------------------------------------------------------------------
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_ORG_ID=org-your-organization-id  # Optional

# Model Selection
WHISPER_MODEL=large-v3-turbo  # tiny | base | small | medium | large-v2 | large-v3-turbo
GPT_MODEL=gpt-4o-mini  # gpt-4o-mini | gpt-4o | gpt-4-turbo
EMBEDDING_MODEL=text-embedding-3-small  # text-embedding-3-small | text-embedding-3-large

# API Limits
OPENAI_MAX_RETRIES=3
OPENAI_TIMEOUT=60  # seconds
OPENAI_MAX_TOKENS=2000  # for GPT responses

# ----------------------------------------------------------------------------
# DATABASE (PostgreSQL)
# ----------------------------------------------------------------------------
DB_HOST=localhost
DB_PORT=5432
DB_NAME=audiomind
DB_USER=audiomind_user
DB_PASSWORD=your-secure-password-here
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=10
DB_ECHO=False  # Log SQL queries (dev only)

# Database URL (auto-constructed, or override)
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# ----------------------------------------------------------------------------
# REDIS (Caching & Celery Broker)
# ----------------------------------------------------------------------------
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=  # Leave empty if no password
REDIS_MAX_CONNECTIONS=50

# Redis URL (auto-constructed, or override)
REDIS_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# ----------------------------------------------------------------------------
# CELERY (Task Queue)
# ----------------------------------------------------------------------------
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=json
CELERY_TIMEZONE=UTC
CELERY_ENABLE_UTC=True

# Task Settings
CELERY_TASK_TIME_LIMIT=3600  # 1 hour max per task
CELERY_TASK_SOFT_TIME_LIMIT=3300  # 55 minutes soft limit
CELERY_WORKER_PREFETCH_MULTIPLIER=4
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000

# ----------------------------------------------------------------------------
# CHROMADB (Vector Database for RAG)
# ----------------------------------------------------------------------------
CHROMA_HOST=localhost
CHROMA_PORT=8001
CHROMA_PERSIST_DIRECTORY=./data/chroma
CHROMA_COLLECTION_NAME=audiomind_transcripts

# ----------------------------------------------------------------------------
# FILE STORAGE
# ----------------------------------------------------------------------------
UPLOAD_DIR=./data/uploads
PROCESSED_DIR=./data/processed
MAX_UPLOAD_SIZE=500  # MB
ALLOWED_AUDIO_FORMATS=mp3,wav,m4a,flac,ogg,wma

# Cleanup Policy
AUTO_DELETE_UPLOADS=True
UPLOAD_RETENTION_DAYS=7

# ----------------------------------------------------------------------------
# PROCESSING CONFIGURATION
# ----------------------------------------------------------------------------

# Audio Processing
AUDIO_SAMPLE_RATE=16000  # Hz (Whisper default)
AUDIO_CHUNK_LENGTH=30  # seconds
ENABLE_NOISE_REDUCTION=False
ENABLE_SPEAKER_DIARIZATION=False

# Topic Modeling
LDA_NUM_TOPICS=10
LDA_PASSES=10
LDA_ITERATIONS=100
BERTOPIC_MIN_TOPIC_SIZE=10
BERTOPIC_NR_TOPICS=auto  # auto | specific number
ENABLE_HYBRID_TOPICS=True

# LLM Synthesis
LLM_TEMPERATURE=0.3  # 0.0 = deterministic, 1.0 = creative
LLM_MAX_RETRIES=3
LLM_CHUNK_SIZE=1000  # tokens
LLM_CHUNK_OVERLAP=100  # tokens

# RAG Configuration
RAG_CHUNK_SIZE=500  # tokens
RAG_CHUNK_OVERLAP=50
RAG_TOP_K=5  # number of relevant chunks to retrieve
RAG_SIMILARITY_THRESHOLD=0.7

# ----------------------------------------------------------------------------
# SECURITY
# ----------------------------------------------------------------------------
SECRET_KEY=your-secret-key-min-32-chars-change-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# API Keys (if implementing API key auth)
API_KEY_HEADER=X-API-Key
ADMIN_API_KEY=your-admin-api-key-here

# ----------------------------------------------------------------------------
# MONITORING & OBSERVABILITY
# ----------------------------------------------------------------------------

# Sentry (Error Tracking)
SENTRY_DSN=  # https://your-sentry-dsn-here
SENTRY_ENVIRONMENT=${APP_ENV}
SENTRY_TRACES_SAMPLE_RATE=0.1  # 10% of transactions

# Prometheus
PROMETHEUS_PORT=9090
ENABLE_METRICS=True

# ----------------------------------------------------------------------------
# DASHBOARD (Streamlit)
# ----------------------------------------------------------------------------
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=localhost
STREAMLIT_BROWSER_GATHER_USAGE_STATS=False
STREAMLIT_THEME_PRIMARY_COLOR=#FF4B4B
STREAMLIT_THEME_BACKGROUND_COLOR=#FFFFFF

# ----------------------------------------------------------------------------
# FEATURE FLAGS
# ----------------------------------------------------------------------------
ENABLE_AUDIO_TRANSCRIPTION=True
ENABLE_TOPIC_MODELING=True
ENABLE_LLM_SYNTHESIS=True
ENABLE_RAG_SEARCH=True
ENABLE_BATCH_PROCESSING=True
ENABLE_REAL_TIME_PROCESSING=False  # Coming soon

# ----------------------------------------------------------------------------
# RATE LIMITING
# ----------------------------------------------------------------------------
RATE_LIMIT_ENABLED=True
RATE_LIMIT_REQUESTS=100  # requests per window
RATE_LIMIT_WINDOW=3600  # seconds (1 hour)

# ----------------------------------------------------------------------------
# LOGGING
# ----------------------------------------------------------------------------
LOG_FORMAT=json  # json | text
LOG_FILE=./logs/audiomind.log
LOG_ROTATION=500 MB
LOG_RETENTION=10 days
LOG_COMPRESSION=zip

# ----------------------------------------------------------------------------
# TESTING
# ----------------------------------------------------------------------------
TEST_DATABASE_URL=postgresql://test:test@localhost:5433/audiomind_test
TEST_REDIS_URL=redis://localhost:6380/1
PYTEST_WORKERS=auto  # parallel test execution

# ----------------------------------------------------------------------------
# DEVELOPMENT
# ----------------------------------------------------------------------------
DEV_MOCK_OPENAI=False  # Use mock responses instead of real API
DEV_SKIP_AUDIO_PROCESSING=False  # Skip heavy processing for faster dev
DEV_USE_SAMPLE_DATA=True  # Use sample audio files for testing

# ============================================================================
# NOTES:
# 
# 1. Security Best Practices:
#    - NEVER commit .env file to version control
#    - Use strong, unique passwords for all services
#    - Rotate API keys regularly
#    - Use environment-specific .env files (.env.dev, .env.prod)
# 
# 2. Production Checklist:
#    - Set APP_ENV=production
#    - Set DEBUG=False
#    - Set API_RELOAD=False
#    - Use strong SECRET_KEY (generate with: openssl rand -hex 32)
#    - Enable HTTPS
#    - Configure proper CORS_ORIGINS
#    - Set up Sentry for error tracking
#    - Configure backup for DATABASE_URL
# 
# 3. Docker:
#    - Pass env vars with docker-compose.yml or --env-file flag
#    - Use Docker secrets for sensitive values in production
# 
# 4. Cloud Deployment:
#    - Use managed services (AWS RDS, ElastiCache, etc.)
#    - Store secrets in AWS Secrets Manager / Azure Key Vault
#    - Use environment-specific configuration
# ============================================================================
